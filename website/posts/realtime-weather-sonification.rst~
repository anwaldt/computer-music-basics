.. title: Weather
.. slug: weather
.. date: 2020-11-05 13:47:51 UTC
.. tags: 
.. category: basics:sonification
.. link: 
.. description: 
.. type: text
.. has_math: true
.. data:


OpenWeatherMap
--------------

This first, simple Web Audio sonification application makes use
of the  Weather API for real-time, browser-based sonification
of weather data.
For fetching data, a free subscription is necessary:
https://home.openweathermap.org

Once subscribed, the API key can be used to get current weather
information in the browser:

   https://api.openweathermap.org/data/2.5/weather?q=Potsdam&appid=eab7c410674e15bfdd841f66941a92c2

JSON Data Structure
-------------------
   
The resulting output in JSON looks like this:

.. code-block:: json

  {
    "coord": {
      "lon": 13.41,
      "lat": 52.52
    },
    "weather": [
      {
	"id": 804,
	"main": "Clouds",
	"description": "overcast clouds",
	"icon": "04d"
      }
    ],
    "base": "stations",
    "main": {
      "temp": 9.74,
      "feels_like": 6.57,
      "temp_min": 9,
      "temp_max": 10.56,
      "pressure": 1034,
      "humidity": 93
    },
    "visibility": 8000,
    "wind": {
      "speed": 4.1,
      "deg": 270
    },
    "clouds": {
      "all": 90
    },
    "dt": 1604655648,
    "sys": {
      "type": 1,
      "id": 1275,
      "country": "DE",
      "sunrise": 1604643143,
      "sunset": 1604676458
    },
    "timezone": 3600,
    "id": 2950159,
    "name": "Berlin",
    "cod": 200
  }


------

All entries of this data structure can be used as
synthesis parameters in a sonification system with
Web Audio.


Temperatures to Frequencies
---------------------------

Mapping
=======

In this example we are using a simple formula for turning temperatures
into more or less pleasing (annoying) tones:

:math:`\displaystyle f_0 = 10 \frac{1}{{T / C^{\circ} }^2}`





|example|


-----

      
Code
====

.. code-block:: html

   <!doctype html>
   <html>

   <head>
   <title>Where would you rather be?</title>
   </head>

   <blockquote style="border: 2px solid #122; padding: 10px; background-color: #ccc;">

   <body>
   <p>Where would you rather be?</p>
   <p>
   <button onclick="berlin()">Berlin</button>
   <button onclick="honolulu()">Honolulu</button>
   <button onclick="stop()">Stop</button>

   </p>


   </body>

   <div id="weather">
   <div id="description"></div>
   <h1 id="temp"></h1>
   <div id="location"></div>
   </div>
   </blockquote>

   <script>

   var audioContext = new window.AudioContext
   var oscillator   = audioContext.createOscillator()
   var gainNode     = audioContext.createGain()

   gainNode.gain.value = 0

   oscillator.connect(gainNode)
   gainNode.connect(audioContext.destination)

   oscillator.start(0)
   oscillator.frequency.setValueAtTime(100, audioContext.currentTime);

   function berlin()
   {
       get_weather('Berlin')
       gainNode.gain.linearRampToValueAtTime(1, audioContext.currentTime + 1);

   }

   function honolulu()
   {
       get_weather('Honolulu')
       gainNode.gain.linearRampToValueAtTime(1, audioContext.currentTime + 1);
   }

   function stop()
   {
   gainNode.gain.linearRampToValueAtTime(0, audioContext.currentTime + 1);
   }

   function frequency(y)
   {
   oscillator.frequency.value = y
   }

   function get_weather( cityName )
   {
       var key = 'eab7c410674e15bfdd841f66941a92c2';
       fetch('https://api.openweathermap.org/data/2.5/weather?q=' + cityName+ '&appid=' + key)
       .then(function(resp) { return resp.json()}) // Convert data to json
       .then(function(data) {
       setSynth(data);
       })
       .catch(function() {
       // catch any errors
       });
   }

   function setSynth(d)
   {
       var celcius = Math.round(parseFloat(d.main.temp)-273.15);
       var fahrenheit = Math.round(((parseFloat(d.main.temp)-273.15)*1.8)+32);

       oscillator.frequency.linearRampToValueAtTime(1000*(100/(celcius*celcius)), audioContext.currentTime + 1);

       document.getElementById('description').innerHTML = d.weather[0].description;
       document.getElementById('temp').innerHTML = celcius + '&deg;';
       document.getElementById('location').innerHTML = d.name;
   }

   </script>
   </html>


Links and More Examples
=======================

Using the API in JavaScript is thoroughly explained here:
https://bithacker.dev/fetch-weather-openweathermap-api-javascript


 
.. |example| raw:: html

   <!doctype html>
   <html>

   <head>
   <title>Where would you rather be?</title>
   </head>

   <blockquote style="border: 2px solid #122; padding: 10px; background-color: #ccc;">

   <body>
   <p>Where would you rather be?</p>
   <p>
   <button onclick="berlin()">Berlin</button>
   <button onclick="honolulu()">Honolulu</button>
   <button onclick="stop()">Stop</button>

   </p>


   </body>

   <div id="weather">
   <div id="description"></div>
   <h1 id="temp"></h1>
   <div id="location"></div>
   </div>
   </blockquote>

   <script>

   var audioContext = new window.AudioContext
   var oscillator   = audioContext.createOscillator()
   var gainNode     = audioContext.createGain()

   gainNode.gain.value = 0

   oscillator.connect(gainNode)
   gainNode.connect(audioContext.destination)

   oscillator.start(0)
   oscillator.frequency.setValueAtTime(100, audioContext.currentTime);

   function berlin()
   {
   get_weather('Berlin')
   gainNode.gain.linearRampToValueAtTime(1, audioContext.currentTime + 1);

   }

   function honolulu()
   {
   get_weather('Honolulu')
   gainNode.gain.linearRampToValueAtTime(1, audioContext.currentTime + 1);
   }

   function stop()
   {
   gainNode.gain.linearRampToValueAtTime(0, audioContext.currentTime + 1);
   }

   function frequency(y)
   {
   oscillator.frequency.value = y
   }

   function get_weather( cityName )
   {
   var key = 'eab7c410674e15bfdd841f66941a92c2';
   fetch('https://api.openweathermap.org/data/2.5/weather?q=' + cityName+ '&appid=' + key)
   .then(function(resp) { return resp.json()}) // Convert data to json
   .then(function(data) {
   setSynth(data);
   })
   .catch(function() {
   // catch any errors
   });
   }

   function setSynth(d)
   {
   var celcius = Math.round(parseFloat(d.main.temp)-273.15);
   var fahrenheit = Math.round(((parseFloat(d.main.temp)-273.15)*1.8)+32);

   oscillator.frequency.linearRampToValueAtTime(1000*(100/(celcius*celcius)), audioContext.currentTime + 1);

   document.getElementById('description').innerHTML = d.weather[0].description;
   document.getElementById('temp').innerHTML = celcius + '&deg;';
   document.getElementById('location').innerHTML = d.name;
   }

   </script>
   </html>

	

  
